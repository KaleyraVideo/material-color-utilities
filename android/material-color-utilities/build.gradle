/*
 * Copyright 2024 Kaleyra @ https://www.kaleyra.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import com.github.jk1.license.render.JsonReportRenderer

plugins {
    alias(libs.plugins.android.library)
    id 'maven-publish'
    id("org.jetbrains.dokka") version "1.9.20"
    alias(catalog.plugins.licenseReport)
}

apply from: '../licenses.gradle'
apply from: '../publish.gradle'


android {
    namespace "com.kaleyra." + project.getName().replace("-", "_")
    compileSdk catalog.versions.sdkVersion.get().toInteger()

    defaultConfig {
        minSdkVersion catalog.versions.minSdkVersion.get()
        targetSdkVersion catalog.versions.sdkVersion.get().toInteger()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    lint {
        abortOnError false
        warning 'InvalidPackage'
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_14
        targetCompatibility JavaVersion.VERSION_14
    }
}

dependencies {
    implementation libs.appcompat
    implementation libs.error.prone.annotations
    coreLibraryDesugaring catalog.desugar
}

licenseReport {
    // Set output directory for the report data.
    // Defaults to ${project.buildDir}/reports/dependency-license.
    outputDir = "$projectDir/build/licenses"

    // Select projects to examine for dependencies.
    // Defaults to current project and all its subprojects
    projects = [project] + project.subprojects

    // Adjust the configurations to fetch dependencies. Default is 'runtimeClasspath'
    // For Android projects use 'releaseRuntimeClasspath' or 'yourFlavorNameReleaseRuntimeClasspath'
    // Use 'ALL' to dynamically resolve all configurations:
    // configurations = ALL
    configurations = ['releaseRuntimeClasspath']

    // Set custom report renderer, implementing ReportRenderer.
    // Yes, you can write your own to support any format necessary.
    renderers = [new JsonReportRenderer('licenses.json', false)]
}

// workaround for mockk spyk(proxy)
// https://mockk.io/doc/md/jdk16-access-exceptions.html
tasks.withType(Test) {
    jvmArgs(
            "--add-opens", "java.base/java.time=ALL-UNNAMED",
            "--add-opens", "java.base/java.lang.reflect=ALL-UNNAMED"
    )
}


